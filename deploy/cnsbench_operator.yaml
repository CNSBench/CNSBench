apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  creationTimestamp: null
  name: benchmarks.cnsbench.example.com
spec:
  group: cnsbench.example.com
  names:
    kind: Benchmark
    listKind: BenchmarkList
    plural: benchmarks
    singular: benchmark
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Benchmark is the Schema for the benchmarks API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: BenchmarkSpec defines the desired state of Benchmark
            properties:
              allWorkloadOutput:
                nullable: true
                type: string
              controlOperations:
                items:
                  properties:
                    deleteSpec:
                      nullable: true
                      properties:
                        selector:
                          description: ObjName string `json:"objName"`
                          properties:
                            matchExpressions:
                              description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                              items:
                                description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                properties:
                                  key:
                                    description: key is the label key that the selector applies to.
                                    type: string
                                  operator:
                                    description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                    type: string
                                  values:
                                    description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                    items:
                                      type: string
                                    type: array
                                required:
                                - key
                                - operator
                                type: object
                              type: array
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                              type: object
                          type: object
                      required:
                      - selector
                      type: object
                    name:
                      type: string
                    outputs:
                      properties:
                        outputName:
                          type: string
                      required:
                      - outputName
                      type: object
                    rateName:
                      nullable: true
                      type: string
                    scaleSpec:
                      description: 'TODO: need a way of specifying how to scale - up or down, and by how much'
                      nullable: true
                      properties:
                        objName:
                          type: string
                        scriptConfigMap:
                          type: string
                      required:
                      - objName
                      - scriptConfigMap
                      type: object
                    snapshotSpec:
                      description: Snapshots and deletions can operate on an individual object or a selector if a selector, then there may be multiple objects that match - should specify different policies for deciding which object to delete, e.g. "newest", "oldest", "random", ???
                      nullable: true
                      properties:
                        actionName:
                          nullable: true
                          type: string
                        snapshotClass:
                          type: string
                        volumeName:
                          nullable: true
                          type: string
                      required:
                      - snapshotClass
                      type: object
                  required:
                  - name
                  type: object
                nullable: true
                type: array
              metadataOutput:
                description: Output sink for the benchmark metadata, e.g. the spec and start and completion times
                nullable: true
                type: string
              outputs:
                items:
                  properties:
                    httpPostSpec:
                      properties:
                        url:
                          type: string
                      required:
                      - url
                      type: object
                    name:
                      type: string
                  required:
                  - name
                  type: object
                type: array
              rates:
                items:
                  properties:
                    constantIncreaseDecreaseRateSpec:
                      properties:
                        decInterval:
                          type: integer
                        incInterval:
                          type: integer
                        max:
                          type: integer
                        min:
                          type: integer
                      required:
                      - decInterval
                      - incInterval
                      - max
                      - min
                      type: object
                    constantRateSpec:
                      properties:
                        interval:
                          type: integer
                      required:
                      - interval
                      type: object
                    name:
                      type: string
                  required:
                  - name
                  type: object
                nullable: true
                type: array
              runtime:
                type: string
              volumes:
                items:
                  description: Creates PVCs with given name.  If count is provided, the name will be name-<volume number>.  Workloads that require volumes should parameterize the name of the volume, and the user should provide the name of a Volume as the value.
                  properties:
                    count:
                      nullable: true
                      type: integer
                    name:
                      type: string
                    rateName:
                      nullable: true
                      type: string
                    spec:
                      description: PersistentVolumeClaimSpec describes the common attributes of storage devices and allows a Source for provider-specific attributes
                      properties:
                        accessModes:
                          description: 'AccessModes contains the desired access modes the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1'
                          items:
                            type: string
                          type: array
                        dataSource:
                          description: 'This field can be used to specify either: * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot) * An existing PVC (PersistentVolumeClaim) * An existing custom resource that implements data population (Alpha) In order to use custom resource types that implement data population, the AnyVolumeDataSource feature gate must be enabled. If the provisioner or an external controller can support the specified data source, it will create a new volume based on the contents of the specified data source.'
                          properties:
                            apiGroup:
                              description: APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required.
                              type: string
                            kind:
                              description: Kind is the type of resource being referenced
                              type: string
                            name:
                              description: Name is the name of resource being referenced
                              type: string
                          required:
                          - kind
                          - name
                          type: object
                        resources:
                          description: 'Resources represents the minimum resources the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources'
                          properties:
                            limits:
                              additionalProperties:
                                anyOf:
                                - type: integer
                                - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              description: 'Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                              type: object
                            requests:
                              additionalProperties:
                                anyOf:
                                - type: integer
                                - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              description: 'Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                              type: object
                          type: object
                        selector:
                          description: A label query over volumes to consider for binding.
                          properties:
                            matchExpressions:
                              description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                              items:
                                description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                properties:
                                  key:
                                    description: key is the label key that the selector applies to.
                                    type: string
                                  operator:
                                    description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                    type: string
                                  values:
                                    description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                    items:
                                      type: string
                                    type: array
                                required:
                                - key
                                - operator
                                type: object
                              type: array
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                              type: object
                          type: object
                        storageClassName:
                          description: 'Name of the StorageClass required by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1'
                          type: string
                        volumeMode:
                          description: volumeMode defines what type of volume is required by the claim. Value of Filesystem is implied when not included in claim spec.
                          type: string
                        volumeName:
                          description: VolumeName is the binding reference to the PersistentVolume backing this claim.
                          type: string
                      type: object
                  required:
                  - name
                  - spec
                  type: object
                nullable: true
                type: array
              workloads:
                items:
                  properties:
                    count:
                      nullable: true
                      type: integer
                    name:
                      type: string
                    outputFiles:
                      items:
                        properties:
                          filename:
                            description: Filename of output file, as it will exist inside the workload container
                            type: string
                          parser:
                            description: Name of parser configmap.  Defaults to the null-parser if not specified, which is a no-op.
                            nullable: true
                            type: string
                          sink:
                            description: Name of output where the parsed file should be sent.  If not specifie, defaults to the "AllResultsOutput" setting.  It's an error if neither are set.
                            nullable: true
                            type: string
                          target:
                            description: If there are multiple resources created by the workload (e.g., client and server), target specifies which resource this is referring to.  See the workload spec's documentation to see what targets are available.  If none is specified, defaults to "workload"
                            nullable: true
                            type: string
                        required:
                        - filename
                        type: object
                      nullable: true
                      type: array
                    rateName:
                      nullable: true
                      type: string
                    syncGroup:
                      nullable: true
                      type: string
                    vars:
                      additionalProperties:
                        type: string
                      nullable: true
                      type: object
                    workload:
                      type: string
                  required:
                  - name
                  - workload
                  type: object
                nullable: true
                type: array
            type: object
          status:
            description: BenchmarkStatus defines the observed state of Benchmark
            properties:
              completionTime:
                format: date-time
                nullable: true
                type: string
              completionTimeUnix:
                format: int64
                type: integer
              conditions:
                items:
                  properties:
                    lastProbeTime:
                      format: date-time
                      nullable: true
                      type: string
                    lastTransitionTime:
                      format: date-time
                      type: string
                    message:
                      nullable: true
                      type: string
                    reason:
                      nullable: true
                      type: string
                    status:
                      type: string
                    type:
                      type: string
                  required:
                  - lastTransitionTime
                  - status
                  - type
                  type: object
                type: array
              initCompletionTime:
                format: date-time
                nullable: true
                type: string
              initCompletionTimeUnix:
                format: int64
                type: integer
              numCompletedObjs:
                type: integer
              runningRates:
                type: integer
              runningWorkloads:
                description: This doesn't include RuneOnce actions
                type: integer
              startTimeUnix:
                format: int64
                type: integer
              state:
                type: string
              targetCompletionTime:
                format: date-time
                nullable: true
                type: string
              targetCompletionTimeUnix:
                format: int64
                nullable: true
                type: integer
            required:
            - completionTimeUnix
            - conditions
            - initCompletionTimeUnix
            - numCompletedObjs
            - runningRates
            - runningWorkloads
            - startTimeUnix
            - state
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: v1
kind: Namespace
metadata:
  labels:
    control-plane: controller-manager
  name: cnsbench-system
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  creationTimestamp: null
  name: benchmarks.cnsbench.example.com
spec:
  group: cnsbench.example.com
  names:
    kind: Benchmark
    listKind: BenchmarkList
    plural: benchmarks
    singular: benchmark
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Benchmark is the Schema for the benchmarks API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: BenchmarkSpec defines the desired state of Benchmark
            properties:
              allWorkloadOutput:
                nullable: true
                type: string
              controlOperations:
                items:
                  properties:
                    deleteSpec:
                      nullable: true
                      properties:
                        selector:
                          description: ObjName string `json:"objName"`
                          properties:
                            matchExpressions:
                              description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                              items:
                                description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                properties:
                                  key:
                                    description: key is the label key that the selector applies to.
                                    type: string
                                  operator:
                                    description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                    type: string
                                  values:
                                    description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                    items:
                                      type: string
                                    type: array
                                required:
                                - key
                                - operator
                                type: object
                              type: array
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                              type: object
                          type: object
                      required:
                      - selector
                      type: object
                    name:
                      type: string
                    outputs:
                      properties:
                        outputName:
                          type: string
                      required:
                      - outputName
                      type: object
                    rateName:
                      nullable: true
                      type: string
                    scaleSpec:
                      description: 'TODO: need a way of specifying how to scale - up or down, and by how much'
                      nullable: true
                      properties:
                        objName:
                          type: string
                        scriptConfigMap:
                          type: string
                      required:
                      - objName
                      - scriptConfigMap
                      type: object
                    snapshotSpec:
                      description: Snapshots and deletions can operate on an individual object or a selector if a selector, then there may be multiple objects that match - should specify different policies for deciding which object to delete, e.g. "newest", "oldest", "random", ???
                      nullable: true
                      properties:
                        actionName:
                          nullable: true
                          type: string
                        snapshotClass:
                          type: string
                        volumeName:
                          nullable: true
                          type: string
                      required:
                      - snapshotClass
                      type: object
                  required:
                  - name
                  type: object
                nullable: true
                type: array
              metadataOutput:
                description: Output sink for the benchmark metadata, e.g. the spec and start and completion times
                nullable: true
                type: string
              outputs:
                items:
                  properties:
                    httpPostSpec:
                      properties:
                        url:
                          type: string
                      required:
                      - url
                      type: object
                    name:
                      type: string
                  required:
                  - name
                  type: object
                type: array
              rates:
                items:
                  properties:
                    constantIncreaseDecreaseRateSpec:
                      properties:
                        decInterval:
                          type: integer
                        incInterval:
                          type: integer
                        max:
                          type: integer
                        min:
                          type: integer
                      required:
                      - decInterval
                      - incInterval
                      - max
                      - min
                      type: object
                    constantRateSpec:
                      properties:
                        interval:
                          type: integer
                      required:
                      - interval
                      type: object
                    name:
                      type: string
                  required:
                  - name
                  type: object
                nullable: true
                type: array
              runtime:
                type: string
              volumes:
                items:
                  description: Creates PVCs with given name.  If count is provided, the name will be name-<volume number>.  Workloads that require volumes should parameterize the name of the volume, and the user should provide the name of a Volume as the value.
                  properties:
                    count:
                      nullable: true
                      type: integer
                    name:
                      type: string
                    rateName:
                      nullable: true
                      type: string
                    spec:
                      description: PersistentVolumeClaimSpec describes the common attributes of storage devices and allows a Source for provider-specific attributes
                      properties:
                        accessModes:
                          description: 'AccessModes contains the desired access modes the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1'
                          items:
                            type: string
                          type: array
                        dataSource:
                          description: 'This field can be used to specify either: * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot) * An existing PVC (PersistentVolumeClaim) * An existing custom resource that implements data population (Alpha) In order to use custom resource types that implement data population, the AnyVolumeDataSource feature gate must be enabled. If the provisioner or an external controller can support the specified data source, it will create a new volume based on the contents of the specified data source.'
                          properties:
                            apiGroup:
                              description: APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required.
                              type: string
                            kind:
                              description: Kind is the type of resource being referenced
                              type: string
                            name:
                              description: Name is the name of resource being referenced
                              type: string
                          required:
                          - kind
                          - name
                          type: object
                        resources:
                          description: 'Resources represents the minimum resources the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources'
                          properties:
                            limits:
                              additionalProperties:
                                anyOf:
                                - type: integer
                                - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              description: 'Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                              type: object
                            requests:
                              additionalProperties:
                                anyOf:
                                - type: integer
                                - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              description: 'Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                              type: object
                          type: object
                        selector:
                          description: A label query over volumes to consider for binding.
                          properties:
                            matchExpressions:
                              description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                              items:
                                description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                properties:
                                  key:
                                    description: key is the label key that the selector applies to.
                                    type: string
                                  operator:
                                    description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                    type: string
                                  values:
                                    description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                    items:
                                      type: string
                                    type: array
                                required:
                                - key
                                - operator
                                type: object
                              type: array
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                              type: object
                          type: object
                        storageClassName:
                          description: 'Name of the StorageClass required by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1'
                          type: string
                        volumeMode:
                          description: volumeMode defines what type of volume is required by the claim. Value of Filesystem is implied when not included in claim spec.
                          type: string
                        volumeName:
                          description: VolumeName is the binding reference to the PersistentVolume backing this claim.
                          type: string
                      type: object
                  required:
                  - name
                  - spec
                  type: object
                nullable: true
                type: array
              workloads:
                items:
                  properties:
                    count:
                      nullable: true
                      type: integer
                    name:
                      type: string
                    outputFiles:
                      items:
                        properties:
                          filename:
                            description: Filename of output file, as it will exist inside the workload container
                            type: string
                          parser:
                            description: Name of parser configmap.  Defaults to the null-parser if not specified, which is a no-op.
                            nullable: true
                            type: string
                          sink:
                            description: Name of output where the parsed file should be sent.  If not specifie, defaults to the "AllResultsOutput" setting.  It's an error if neither are set.
                            nullable: true
                            type: string
                          target:
                            description: If there are multiple resources created by the workload (e.g., client and server), target specifies which resource this is referring to.  See the workload spec's documentation to see what targets are available.  If none is specified, defaults to "workload"
                            nullable: true
                            type: string
                        required:
                        - filename
                        type: object
                      nullable: true
                      type: array
                    rateName:
                      nullable: true
                      type: string
                    syncGroup:
                      nullable: true
                      type: string
                    vars:
                      additionalProperties:
                        type: string
                      nullable: true
                      type: object
                    workload:
                      type: string
                  required:
                  - name
                  - workload
                  type: object
                nullable: true
                type: array
            type: object
          status:
            description: BenchmarkStatus defines the observed state of Benchmark
            properties:
              completionTime:
                format: date-time
                nullable: true
                type: string
              completionTimeUnix:
                format: int64
                type: integer
              conditions:
                items:
                  properties:
                    lastProbeTime:
                      format: date-time
                      nullable: true
                      type: string
                    lastTransitionTime:
                      format: date-time
                      type: string
                    message:
                      nullable: true
                      type: string
                    reason:
                      nullable: true
                      type: string
                    status:
                      type: string
                    type:
                      type: string
                  required:
                  - lastTransitionTime
                  - status
                  - type
                  type: object
                type: array
              initCompletionTime:
                format: date-time
                nullable: true
                type: string
              initCompletionTimeUnix:
                format: int64
                type: integer
              numCompletedObjs:
                type: integer
              runningRates:
                type: integer
              runningWorkloads:
                description: This doesn't include RuneOnce actions
                type: integer
              startTimeUnix:
                format: int64
                type: integer
              state:
                type: string
              targetCompletionTime:
                format: date-time
                nullable: true
                type: string
              targetCompletionTimeUnix:
                format: int64
                nullable: true
                type: integer
            required:
            - completionTimeUnix
            - conditions
            - initCompletionTimeUnix
            - numCompletedObjs
            - runningRates
            - runningWorkloads
            - startTimeUnix
            - state
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: cnsbench-leader-election-role
  namespace: cnsbench-system
rules:
- apiGroups:
  - ""
  - coordination.k8s.io
  resources:
  - configmaps
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  creationTimestamp: null
  name: cnsbench-manager-role
  namespace: cnsbench-system
rules:
- apiGroups:
  - apps
  resources:
  - daemonsets
  - deployments
  - replicasets
  - statefulsets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - batch
  resources:
  - jobs
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - configmaps
  - endpoints
  - events
  - persistentvolumeclaims
  - pods
  - secrets
  - services
  - services/finalizers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: cnsbench-manager-role
rules:
- apiGroups:
  - apps
  resources:
  - daemonsets
  - deployments
  - replicasets
  - statefulsets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - batch
  resources:
  - jobs
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cnsbench.example.com
  resources:
  - benchmarks
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cnsbench.example.com
  resources:
  - benchmarks/finalizers
  verbs:
  - update
- apiGroups:
  - cnsbench.example.com
  resources:
  - benchmarks/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - ""
  resources:
  - configmaps
  - endpoints
  - events
  - persistentvolumeclaims
  - pods
  - secrets
  - services
  - services/finalizers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cnsbench-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cnsbench-proxy-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: cnsbench-leader-election-rolebinding
  namespace: cnsbench-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cnsbench-leader-election-role
subjects:
- kind: ServiceAccount
  name: default
  namespace: cnsbench-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cnsbench-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cnsbench-manager-role
subjects:
- kind: ServiceAccount
  name: default
  namespace: cnsbench-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cnsbench-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cnsbench-proxy-role
subjects:
- kind: ServiceAccount
  name: default
  namespace: cnsbench-system
---
apiVersion: v1
data:
  controller_manager_config.yaml: |
    apiVersion: controller-runtime.sigs.k8s.io/v1alpha1
    kind: ControllerManagerConfig
    health:
      healthProbeBindAddress: :8081
    metrics:
      bindAddress: 127.0.0.1:8080
    webhook:
      port: 9443
    leaderElection:
      leaderElect: true
      resourceName: d01eb01b.example.com
kind: ConfigMap
metadata:
  name: cnsbench-manager-config
  namespace: cnsbench-system
---
apiVersion: v1
kind: Service
metadata:
  labels:
    control-plane: controller-manager
  name: cnsbench-controller-manager-metrics-service
  namespace: cnsbench-system
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    control-plane: controller-manager
---
apiVersion: v1
kind: Service
metadata:
  name: cnsbench-output-collector
  namespace: cnsbench-system
spec:
  ports:
  - port: 8888
    protocol: TCP
  selector:
    app: output-collector
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    control-plane: controller-manager
  name: cnsbench-controller-manager
  namespace: cnsbench-system
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager
  template:
    metadata:
      labels:
        control-plane: controller-manager
    spec:
      containers:
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=10
        image: gcr.io/kubebuilder/kube-rbac-proxy:v0.5.0
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=127.0.0.1:8080
        - --leader-elect
        command:
        - /manager
        image: cnsbench/controller:latest
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 100m
            memory: 30Mi
          requests:
            cpu: 100m
            memory: 20Mi
        securityContext:
          allowPrivilegeEscalation: false
      securityContext:
        runAsUser: 65532
      terminationGracePeriodSeconds: 10
---
apiVersion: v1
kind: Pod
metadata:
  labels:
    app: output-collector
  name: cnsbench-output-collector
  namespace: cnsbench-system
spec:
  containers:
  - command:
    - /output-collector
    image: cnsbench/output-collector
    name: output-collector
    ports:
    - containerPort: 8888
    resources:
      limits:
        cpu: 100m
        memory: 30Mi
      requests:
        cpu: 100m
        memory: 20Mi
    securityContext:
      runAsUser: 65532
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: pod-watcher
  namespace: default
secrets:
- name: pod-watcher-token
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  namespace: default
  name: cnsbench-pod-watcher
rules:
- apiGroups: [""] # "" indicates the core API group
  resources: ["pods"]
  verbs: ["get", "watch", "list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cnsbench-binding
subjects:
  - kind: ServiceAccount
    name: pod-watcher
    namespace: default
roleRef:
  kind: ClusterRole
  name: cnsbench-pod-watcher
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: v1
kind: Secret
metadata:
  name: pod-watcher-token
  namespace: default
  annotations:
    kubernetes.io/service-account.name: pod-watcher
type: kubernetes.io/service-account-token
