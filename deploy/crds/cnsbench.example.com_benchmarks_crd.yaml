apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: benchmarks.cnsbench.example.com
spec:
  group: cnsbench.example.com
  names:
    kind: Benchmark
    listKind: BenchmarkList
    plural: benchmarks
    singular: benchmark
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Benchmark is the Schema for the benchmarks API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: BenchmarkSpec defines the desired state of Benchmark
            properties:
              actions:
                items:
                  properties:
                    createObjSpec:
                      properties:
                        storageClass:
                          nullable: true
                          type: string
                        volName:
                          nullable: true
                          type: string
                        workload:
                          type: string
                      required:
                      - workload
                      type: object
                    name:
                      type: string
                    outputs:
                      properties:
                        files:
                          items:
                            properties:
                              label:
                                type: string
                              parser:
                                type: string
                              path:
                                type: string
                            required:
                            - path
                            type: object
                          type: array
                        outputName:
                          type: string
                      required:
                      - outputName
                      type: object
                    rateName:
                      nullable: true
                      type: string
                    snapshotSpec:
                      properties:
                        snapshotClass:
                          type: string
                        volName:
                          type: string
                      required:
                      - snapshotClass
                      - volName
                      type: object
                  required:
                  - name
                  type: object
                type: array
              outputs:
                items:
                  properties:
                    httpPostSpec:
                      properties:
                        url:
                          type: string
                      required:
                      - url
                      type: object
                    name:
                      type: string
                  required:
                  - name
                  type: object
                type: array
              rates:
                items:
                  properties:
                    constantIncreaseDecreaseRateSpec:
                      properties:
                        decInterval:
                          type: integer
                        incInterval:
                          type: integer
                        max:
                          type: integer
                        min:
                          type: integer
                      required:
                      - decInterval
                      - incInterval
                      - max
                      - min
                      type: object
                    constantRateSpec:
                      properties:
                        interval:
                          type: integer
                      required:
                      - interval
                      type: object
                    name:
                      type: string
                  required:
                  - name
                  type: object
                nullable: true
                type: array
              stopAfter:
                description: Runtime, numactions, ...? For each action have an exit
                  condition? (or each rate?)
                type: string
            required:
            - actions
            type: object
          status:
            description: BenchmarkStatus defines the observed state of Benchmark
            properties:
              completionTime:
                format: date-time
                nullable: true
                type: string
              completionTimeUnix:
                format: int64
                type: integer
              conditions:
                items:
                  properties:
                    lastProbeTime:
                      format: date-time
                      nullable: true
                      type: string
                    lastTransitionTime:
                      format: date-time
                      type: string
                    message:
                      nullable: true
                      type: string
                    reason:
                      nullable: true
                      type: string
                    status:
                      type: string
                    type:
                      type: string
                  required:
                  - lastTransitionTime
                  - status
                  - type
                  type: object
                type: array
              runningActions:
                description: This doesn't include RuneOnce actions
                type: integer
              runningRates:
                type: integer
              startTimeUnix:
                format: int64
                type: integer
              state:
                type: string
            required:
            - completionTimeUnix
            - conditions
            - runningActions
            - runningRates
            - startTimeUnix
            - state
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
