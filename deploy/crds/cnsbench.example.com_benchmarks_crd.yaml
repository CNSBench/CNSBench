apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: benchmarks.cnsbench.example.com
spec:
  group: cnsbench.example.com
  names:
    kind: Benchmark
    listKind: BenchmarkList
    plural: benchmarks
    singular: benchmark
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Benchmark is the Schema for the benchmarks API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: BenchmarkSpec defines the desired state of Benchmark
            properties:
              allWorkloadOutput:
                nullable: true
                type: string
              controlOperations:
                items:
                  properties:
                    deleteSpec:
                      nullable: true
                      properties:
                        selector:
                          description: ObjName string `json:"objName"`
                          properties:
                            matchExpressions:
                              description: matchExpressions is a list of label selector
                                requirements. The requirements are ANDed.
                              items:
                                description: A label selector requirement is a selector
                                  that contains values, a key, and an operator that
                                  relates the key and values.
                                properties:
                                  key:
                                    description: key is the label key that the selector
                                      applies to.
                                    type: string
                                  operator:
                                    description: operator represents a key's relationship
                                      to a set of values. Valid operators are In,
                                      NotIn, Exists and DoesNotExist.
                                    type: string
                                  values:
                                    description: values is an array of string values.
                                      If the operator is In or NotIn, the values array
                                      must be non-empty. If the operator is Exists
                                      or DoesNotExist, the values array must be empty.
                                      This array is replaced during a strategic merge
                                      patch.
                                    items:
                                      type: string
                                    type: array
                                required:
                                - key
                                - operator
                                type: object
                              type: array
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: matchLabels is a map of {key,value} pairs.
                                A single {key,value} in the matchLabels map is equivalent
                                to an element of matchExpressions, whose key field
                                is "key", the operator is "In", and the values array
                                contains only "value". The requirements are ANDed.
                              type: object
                          type: object
                      required:
                      - selector
                      type: object
                    name:
                      type: string
                    outputs:
                      properties:
                        outputName:
                          type: string
                      required:
                      - outputName
                      type: object
                    rateName:
                      nullable: true
                      type: string
                    scaleSpec:
                      description: 'TODO: need a way of specifying how to scale -
                        up or down, and by how much'
                      nullable: true
                      properties:
                        objName:
                          type: string
                        scriptConfigMap:
                          type: string
                      required:
                      - objName
                      - scriptConfigMap
                      type: object
                    snapshotSpec:
                      description: Snapshots and deletions can operate on an individual
                        object or a selector if a selector, then there may be multiple
                        objects that match - should specify different policies for
                        deciding which object to delete, e.g. "newest", "oldest",
                        "random", ???
                      nullable: true
                      properties:
                        actionName:
                          nullable: true
                          type: string
                        snapshotClass:
                          type: string
                        volumeName:
                          nullable: true
                          type: string
                      required:
                      - snapshotClass
                      type: object
                  required:
                  - name
                  type: object
                nullable: true
                type: array
              metadataOutput:
                description: Output sink for the benchmark metadata, e.g. the spec
                  and start and completion times
                nullable: true
                type: string
              outputs:
                items:
                  properties:
                    httpPostSpec:
                      properties:
                        url:
                          type: string
                      required:
                      - url
                      type: object
                    name:
                      type: string
                  required:
                  - name
                  type: object
                type: array
              rates:
                items:
                  properties:
                    constantIncreaseDecreaseRateSpec:
                      properties:
                        decInterval:
                          type: integer
                        incInterval:
                          type: integer
                        max:
                          type: integer
                        min:
                          type: integer
                      required:
                      - decInterval
                      - incInterval
                      - max
                      - min
                      type: object
                    constantRateSpec:
                      properties:
                        interval:
                          type: integer
                      required:
                      - interval
                      type: object
                    name:
                      type: string
                  required:
                  - name
                  type: object
                nullable: true
                type: array
              runtime:
                type: string
              volumes:
                items:
                  description: Creates PVCs with given name.  If count is provided,
                    the name will be name-<volume number>.  Workloads that require
                    volumes should parameterize the name of the volume, and the user
                    should provide the name of a Volume as the value.
                  properties:
                    count:
                      nullable: true
                      type: integer
                    name:
                      type: string
                    rateName:
                      nullable: true
                      type: string
                    spec:
                      description: PersistentVolumeClaimSpec describes the common
                        attributes of storage devices and allows a Source for provider-specific
                        attributes
                      properties:
                        accessModes:
                          description: 'AccessModes contains the desired access modes
                            the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1'
                          items:
                            type: string
                          type: array
                        dataSource:
                          description: 'This field can be used to specify either:
                            * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot
                            - Beta) * An existing PVC (PersistentVolumeClaim) * An
                            existing custom resource/object that implements data population
                            (Alpha) In order to use VolumeSnapshot object types, the
                            appropriate feature gate must be enabled (VolumeSnapshotDataSource
                            or AnyVolumeDataSource) If the provisioner or an external
                            controller can support the specified data source, it will
                            create a new volume based on the contents of the specified
                            data source. If the specified data source is not supported,
                            the volume will not be created and the failure will be
                            reported as an event. In the future, we plan to support
                            more data source types and the behavior of the provisioner
                            may change.'
                          properties:
                            apiGroup:
                              description: APIGroup is the group for the resource
                                being referenced. If APIGroup is not specified, the
                                specified Kind must be in the core API group. For
                                any other third-party types, APIGroup is required.
                              type: string
                            kind:
                              description: Kind is the type of resource being referenced
                              type: string
                            name:
                              description: Name is the name of resource being referenced
                              type: string
                          required:
                          - kind
                          - name
                          type: object
                        resources:
                          description: 'Resources represents the minimum resources
                            the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources'
                          properties:
                            limits:
                              additionalProperties:
                                anyOf:
                                - type: integer
                                - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              description: 'Limits describes the maximum amount of
                                compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                              type: object
                            requests:
                              additionalProperties:
                                anyOf:
                                - type: integer
                                - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              description: 'Requests describes the minimum amount
                                of compute resources required. If Requests is omitted
                                for a container, it defaults to Limits if that is
                                explicitly specified, otherwise to an implementation-defined
                                value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                              type: object
                          type: object
                        selector:
                          description: A label query over volumes to consider for
                            binding.
                          properties:
                            matchExpressions:
                              description: matchExpressions is a list of label selector
                                requirements. The requirements are ANDed.
                              items:
                                description: A label selector requirement is a selector
                                  that contains values, a key, and an operator that
                                  relates the key and values.
                                properties:
                                  key:
                                    description: key is the label key that the selector
                                      applies to.
                                    type: string
                                  operator:
                                    description: operator represents a key's relationship
                                      to a set of values. Valid operators are In,
                                      NotIn, Exists and DoesNotExist.
                                    type: string
                                  values:
                                    description: values is an array of string values.
                                      If the operator is In or NotIn, the values array
                                      must be non-empty. If the operator is Exists
                                      or DoesNotExist, the values array must be empty.
                                      This array is replaced during a strategic merge
                                      patch.
                                    items:
                                      type: string
                                    type: array
                                required:
                                - key
                                - operator
                                type: object
                              type: array
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: matchLabels is a map of {key,value} pairs.
                                A single {key,value} in the matchLabels map is equivalent
                                to an element of matchExpressions, whose key field
                                is "key", the operator is "In", and the values array
                                contains only "value". The requirements are ANDed.
                              type: object
                          type: object
                        storageClassName:
                          description: 'Name of the StorageClass required by the claim.
                            More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1'
                          type: string
                        volumeMode:
                          description: volumeMode defines what type of volume is required
                            by the claim. Value of Filesystem is implied when not
                            included in claim spec.
                          type: string
                        volumeName:
                          description: VolumeName is the binding reference to the
                            PersistentVolume backing this claim.
                          type: string
                      type: object
                  required:
                  - name
                  - spec
                  type: object
                nullable: true
                type: array
              workloads:
                items:
                  properties:
                    count:
                      nullable: true
                      type: integer
                    name:
                      type: string
                    outputFiles:
                      items:
                        properties:
                          filename:
                            description: Filename of output file, as it will exist
                              inside the workload container
                            type: string
                          parser:
                            description: Name of parser configmap.  Defaults to the
                              null-parser if not specified, which is a no-op.
                            nullable: true
                            type: string
                          sink:
                            description: Name of output where the parsed file should
                              be sent.  If not specifie, defaults to the "AllResultsOutput"
                              setting.  It's an error if neither are set.
                            nullable: true
                            type: string
                          target:
                            description: If there are multiple resources created by
                              the workload (e.g., client and server), target specifies
                              which resource this is referring to.  See the workload
                              spec's documentation to see what targets are available.  If
                              none is specified, defaults to "workload"
                            nullable: true
                            type: string
                        required:
                        - filename
                        type: object
                      nullable: true
                      type: array
                    rateName:
                      nullable: true
                      type: string
                    syncGroup:
                      nullable: true
                      type: string
                    vars:
                      additionalProperties:
                        type: string
                      nullable: true
                      type: object
                    workload:
                      type: string
                  required:
                  - name
                  - workload
                  type: object
                nullable: true
                type: array
            type: object
          status:
            description: BenchmarkStatus defines the observed state of Benchmark
            properties:
              completionTime:
                format: date-time
                nullable: true
                type: string
              completionTimeUnix:
                format: int64
                type: integer
              conditions:
                items:
                  properties:
                    lastProbeTime:
                      format: date-time
                      nullable: true
                      type: string
                    lastTransitionTime:
                      format: date-time
                      type: string
                    message:
                      nullable: true
                      type: string
                    reason:
                      nullable: true
                      type: string
                    status:
                      type: string
                    type:
                      type: string
                  required:
                  - lastTransitionTime
                  - status
                  - type
                  type: object
                type: array
              initCompletionTime:
                format: date-time
                nullable: true
                type: string
              initCompletionTimeUnix:
                format: int64
                type: integer
              numCompletedObjs:
                type: integer
              runningRates:
                type: integer
              runningWorkloads:
                description: This doesn't include RuneOnce actions
                type: integer
              startTimeUnix:
                format: int64
                type: integer
              state:
                type: string
            required:
            - completionTimeUnix
            - conditions
            - initCompletionTimeUnix
            - numCompletedObjs
            - runningRates
            - runningWorkloads
            - startTimeUnix
            - state
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
