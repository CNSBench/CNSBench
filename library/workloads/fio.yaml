apiVersion: v1
kind: ConfigMap
metadata:
  name: fio
  namespace: library
  labels:
    type: workload
  annotations:
    cnsbench.default.initConfig: fio-rw-initconfig
    cnsbench.default.config: fio-rw-config
    cnsbench.default.rw: rw
    cnsbench.default.pctread: "50"
    cnsbench.default.fiosize: 6g
    cnsbench.default.pvcsize: 7Gi
data:
  initconfig.yaml: |
    apiVersion: v1
    data:
      fio-rw-initconfig: |
        [global]
        filename=/var/data/testfile
        size={{fiosize}}

        [test]
        rw=write
        nrfiles=1
        fadvise_hint=0
        ioengine=libaio
        blocksize=1M
        direct=0
        numjobs=1
        group_reporting
        time_based
        runtime=1s
        per_job_logs=0
        lat_percentiles=1
    kind: ConfigMap
    metadata:
      name: fio-rw-initconfig
      namespace: default
  config.yaml: |
    apiVersion: v1
    data:
      fio-rw-config: |
        [global]
        filename=/var/data/testfile
        size={{fiosize}}

        [test]
        rw={{rw}}
        rwmixread={{pctread}}
        nrfiles=1
        fadvise_hint=0
        ioengine=libaio
        blocksize=1M
        direct=0
        numjobs=1
        group_reporting
        per_job_logs=0
        lat_percentiles=1
    kind: ConfigMap
    metadata:
      name: fio-rw-config
      namespace: default
  pvc.yaml: |
    apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      name: vol-{{ACTION_NAME}}-{{INSTANCE_NUM}}
      namespace: default
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: {{pvcsize}}
      storageClassName: {{storageClass}}
      volumeMode: Filesystem
  workload.yaml: |
    apiVersion: batch/v1
    kind: Job
    metadata:
      name: fio-{{ACTION_NAME}}-{{INSTANCE_NUM}}
      namespace: default
      annotations:
        sync: "1"
        role: workload
    spec:
      backoffLimit: 0
      template:
        spec:
          restartPolicy: Never
          initContainers:
          - image: fio
            imagePullPolicy: IfNotPresent
            name: init-fio
            command: ["fio", "/var/config/config"]
            volumeMounts:
              - mountPath: /var/data/
                name: data
              - mountPath: /var/config/
                name: initconfig
          containers:
          - image: kubes1:5000/cnsb/fio
            imagePullPolicy: IfNotPresent
            name: fio
            command: ["bash", "-c", "fio /var/config/config --output-format=json+ | tee /tmp/output.json"]
            volumeMounts:
              - mountPath: /var/data/
                name: data
              - mountPath: /var/config/
                name: config
          volumes:
          - name: data
            persistentVolumeClaim:
              claimName: vol-{{ACTION_NAME}}-{{INSTANCE_NUM}}
          - name: config
            configMap:
              name: {{config}}
              items:
              - key: {{config}}
                path: config
          - name: initconfig
            configMap:
              name: {{initConfig}}
              items:
              - key: {{initConfig}}
                path: config
